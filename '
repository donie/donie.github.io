"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" General
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
if $SHELL =~ 'bin/fish'
    set shell=/bin/bash
endif
set nocompatible    "don't bother vi
let mapleader = ","
filetype off
syntax enable

set anti
set autoread        " auto read update of file
set backspace=indent,eol,start
set clipboard=unnamed
set encoding=utf-8
set equalalways
set expandtab
set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936
set foldmethod=indent
set guitablabel=%t
set history=600     " set history size
set hlsearch
set incsearch       " do incremental searching
set laststatus=2    " always show status bar
set linespace=2
set matchpairs=(:),{:},[:],<:>
if has('mouse')
  set mouse=a
endif
set nobackup    " set no backup
set noerrorbells
set nowb
set noswapfile
set number
set numberwidth=4
set nowrap
set ruler       " show the cursor position all the time
set shiftwidth=4
set showcmd     " display incomplete commands
set smartcase
set spell
set t_Co=256
set tabstop=4
set visualbell
set whichwrap=b,s,<,>,[,]
set wildmenu


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" VBundle
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
" required!
Bundle 'gmarik/vundle'

" Bundles here:
"
" original repos on github
Bundle 'tpope/vim-fugitive'
" Bundle 'Lokaltog/vim-easymotion'
Bundle 'rstacruz/sparkup', {'rtp': 'vim/'}
Bundle 'tpope/vim-rails.git'
Bundle 'kien/ctrlp.vim'
Bundle 'bling/vim-airline'
Bundle 'scrooloose/nerdtree'
Bundle 'mileszs/ack.vim'
Bundle 'rking/ag.vim'
Bundle 'ap/vim-css-color'
Bundle 'nelstrom/vim-mac-classic-theme'
" vim-scripts repos
" Bundle 'L9'
" non github repos
" Bundle 'git://git.wincent.com/command-t.git'
" git repos on your local machine (ie. when working on your own plugin)
" Bundle 'file:///Users/gmarik/path/to/plugin'

filetype plugin indent on
" required!


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" UDM
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Quickly edit/reload the vimrc file
nmap <silent> <leader>ev :e ~/.vimrc<CR>
" nmap <silent> <leader>sv :so ~/.vimrc<CR>
map <silent> <leader>V :source ~/.vimrc<CR>:filetype detect<CR>:exe ":echo 'vimrc reloaded'"<CR>
" => Quickly save/load session
map <F6> :mksession! ~/vim_session <cr> " Quick write session with F6
map <F7> :source ~/vim_session <cr>     " And load session with F7
" => Quickly moving in windows
map <C-h> <C-w>h "quickly moving around
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l
" => Spell checking
" Pressing ,ss will toggle and untoggle spell checking
map <leader>ss :setlocal spell!<cr>
map <leader>sn ]s
map <leader>sp [s
map <leader>sa zg
map <leader>s? z=
" => CtrlP
nmap <leader>t :CtrlP<CR>
nmap <leader>T :CtrlPClearCache<CR>:CtrlP<CR><CR>
nmap <leader>b :CtrlPBuffer<CR>
" => NERDTree
nmap <leader>d :NERDTreeToggle<CR>
nmap <leader>f :NERDTreeFind<CR>
" => Miscellaneous
map <leader>l :Align
nmap <leader>a :Ack
nmap <leader>] :TagbarToggle<CR>
nmap <leader><space> :call whitespace#strip_trailing()<CR>
nmap <leader>g :GitGutterToggle<CR>
nmap <leader>c <Plug>Kwbd

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" interface
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

if has("gui_running") || has("gui_macvim")
    colorscheme lol
    " colorscheme Tomorrow
    let g:colors_name="lol"
    set lines=30 columns=150
    set guifont = "PragmataPro":12
else
    let g:solarized_termcolors=256
    colorscheme lol
    set guifont = "PragmataPro":12
endif

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Bundles Settings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" => airline
let g:airline_symbols = {}
let g:airline_left_sep = '⮀'
let g:airline_left_alt_sep = '⮁'
let g:airline_right_sep = '⮂'
let g:airline_right_alt_sep = '⮃'
let g:airline_symbols.branch = '⭠'
let g:airline_symbols.readonly = '⭤'
let g:airline_symbols.linenr = '¶'
let g:airline_symbols.paste = 'ρ'
let g:airline_symbols.paste = 'Þ'
let g:airline_symbols.paste = '∥'
let g:airline_symbols.whitespace = 'Ξ'

" => CtrlP
let g:ctrlp_match_window = 'order:ttb,max:20'
let g:ctrlp_log = 1
let g:ctrlp_working_path_mode = 0
let g:ctrlp_max_files = 0

" Use The Silver Searcher https://github.com/ggreer/the_silver_searcher
if executable('ag')
  let g:ackprg = 'ag --nogroup --column --smart-case'

  " Use Ag over Grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
  " let g:ctrlp_user_command = 'find %s -type f'
endif

" => Miscellaneous
let g:NERDSpaceDelims = 1
let g:gitgutter_enabled = 0
